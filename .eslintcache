[{"C:\\Users\\Shane\\project-website\\src\\index.js":"1","C:\\Users\\Shane\\project-website\\src\\App.js":"2","C:\\Users\\Shane\\project-website\\src\\reportWebVitals.js":"3","C:\\Users\\Shane\\project-website\\src\\components\\FileUpload.js":"4","C:\\Users\\Shane\\project-website\\src\\components\\Message.js":"5","C:\\Users\\Shane\\project-website\\src\\components\\Progress.js":"6"},{"size":198,"mtime":1607015456762,"results":"7","hashOfConfig":"8"},{"size":415,"mtime":1608246490193,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":3732,"mtime":1608246373375,"results":"11","hashOfConfig":"8"},{"size":635,"mtime":1606933225725,"results":"12","hashOfConfig":"8"},{"size":581,"mtime":1607013785166,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1xotsot",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"C:\\Users\\Shane\\project-website\\src\\index.js",[],["30","31"],"C:\\Users\\Shane\\project-website\\src\\App.js",[],"C:\\Users\\Shane\\project-website\\src\\reportWebVitals.js",[],["32","33"],"C:\\Users\\Shane\\project-website\\src\\components\\FileUpload.js",["34","35"],"import React, { Fragment, useState } from 'react'\r\nimport Message from './Message'\r\nimport Progress from './Progress'\r\nimport axios from 'axios'\r\n\r\nconst FileUpload = () => {\r\n    const [file, setFile] = useState('');\r\n    const [filename, setFilename] = useState('Choose File');\r\n    const [uploadedFile, setUploadedFile] = useState({});\r\n    const [message, setMessage] = useState('');\r\n    const [uploadPercentage, setUploadPercentage] = useState(0);\r\n    const [returnedFile, setReturnedFile] = useState('');\r\n    \r\n    const onChange = e => {\r\n        setFile(e.target.files[0]);\r\n        setFilename(e.target.files[0].name);\r\n        setReturnedFile('')\r\n    }\r\n\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('file', file)\r\n\r\n        try {\r\n            const res = await axios.post('http://localhost:5000/ascii', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                },\r\n                onUploadProgress: progressEvent => {\r\n                    setUploadPercentage(\r\n                        parseInt(\r\n                            Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n                        )\r\n                    );\r\n\r\n                // Clear progress bar percentage\r\n                setTimeout(() => setUploadPercentage(0), 10000);\r\n                }\r\n\r\n            });\r\n\r\n            setReturnedFile(res.data);\r\n\r\n            setMessage('File Uploaded');\r\n\r\n            setFilename('Choose File')\r\n        } catch(error) {\r\n            // if(error.response.status === 500) {\r\n            //     setMessage('There was a problem with the server')\r\n            // } else {\r\n            //     setMessage(error.response.data.msg); // msg comes from server side\r\n            // }\r\n            console.log(error)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            {message ? <Message msg={message} /> : null}\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"custom-file mb-4\">\r\n                    <input \r\n                        type=\"file\" \r\n                        accept=\".jpg, .png, .jpeg, .mp4\"\r\n                        maxfilesize={524288}\r\n                        className=\"custom-file-input\" \r\n                        id=\"customFile\" \r\n                        onChange={onChange}\r\n                    />\r\n                    <label \r\n                        className=\"custom-file-label\" \r\n                        htmlFor=\"customFile\">{filename}\r\n                    </label>\r\n                </div>\r\n\r\n                <Progress percentage={uploadPercentage} />\r\n\r\n                <input \r\n                    type='submit' \r\n                    value=\"Submit\" \r\n                    className='btn btn-primary btn-block mt-4'\r\n                />\r\n                \r\n            </form>\r\n            \r\n            <div className='preview'>\r\n                <img \r\n                    src={file? URL.createObjectURL(file) : null}\r\n                    className='rounded mx-auto d-block mt-4' \r\n                    alt={file? file.name : null} \r\n                    height='600px' \r\n                    width='800px'\r\n                />\r\n            </div>\r\n\r\n            { returnedFile ? <div className='preview'>\r\n                <img \r\n                    src={returnedFile? returnedFile : null}\r\n                    className='rounded mx-auto d-block mt-4' \r\n                    alt={returnedFile? returnedFile : null} \r\n                    height='600px' \r\n                    width='800px'\r\n                />\r\n            </div> : null }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default FileUpload","C:\\Users\\Shane\\project-website\\src\\components\\Message.js",[],"C:\\Users\\Shane\\project-website\\src\\components\\Progress.js",[],["36","37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"38","replacedBy":"42"},{"ruleId":"40","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":9,"column":12,"nodeType":"46","messageId":"47","endLine":9,"endColumn":24},{"ruleId":"44","severity":1,"message":"48","line":9,"column":26,"nodeType":"46","messageId":"47","endLine":9,"endColumn":41},{"ruleId":"38","replacedBy":"49"},{"ruleId":"40","replacedBy":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],["51"],["52"],"no-unused-vars","'uploadedFile' is assigned a value but never used.","Identifier","unusedVar","'setUploadedFile' is assigned a value but never used.",["51"],["52"],"no-global-assign","no-unsafe-negation"]